{"is_source_file": true, "format": "JavaScript", "description": "This file defines the initial state, logic, and utility functions for managing a chess game in a JavaScript application, including state initialization, move generation, move execution, undo, reset, and hint generation.", "external_files": [], "external_methods": [], "published": ["gameInitialState", "gameReducer", "getHints"], "classes": [], "methods": [{"name": "initialBoard", "description": "Initializes and returns the starting chessboard setup with standard piece positions."}, {"name": "inBounds(r,c)", "description": "Checks if given row and column indices are within the 8x8 chessboard boundaries.", "scope": "", "scopeKind": ""}, {"name": "isWhite(piece)", "description": "Determines if a given piece character is a white piece.", "scope": "", "scopeKind": ""}, {"name": "isBlack(piece)", "description": "Determines if a given piece character is a black piece.", "scope": "", "scopeKind": ""}, {"name": "cloneBoard(board)", "description": "Creates a deep copy of the chessboard array.", "scope": "", "scopeKind": ""}, {"name": "basicMoves(board, r, c)", "description": "Generates pseudo-legal moves for the piece at a specified position, including simple move rules for all piece types.", "scope": "", "scopeKind": ""}, {"name": "gameReducer(state = gameInitialState, action)", "description": "Reducer function managing the chess game state, handling move selection, move execution, undo, reset, and other actions.", "scope": "", "scopeKind": ""}, {"name": "getHints(board, r, c)", "description": "Provides simplified move targets for a given piece, used for highlighting possible moves.", "scope": "", "scopeKind": ""}], "calls": ["inBounds", "isWhite", "isBlack", "cloneBoard", "basicMoves"], "search-terms": ["chess initial setup", "board move logic", "game reducer", "move generation", "pawn moves", "piece move rules", "state management"], "state": 2, "file_id": 18, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "basicMoves", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^function basicMoves(board, r, c) {$/", "language": "JavaScript", "kind": "function", "signature": "(board, r, c)"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  board: initialBoard(),$/", "language": "JavaScript", "kind": "property", "scope": "gameInitialState", "scopeKind": "class"}, {"_type": "tag", "name": "cloneBoard", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^function cloneBoard(board) {$/", "language": "JavaScript", "kind": "function", "signature": "(board)"}, {"_type": "tag", "name": "empty", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  const empty = Array(8).fill(null).map(() => Array(8).fill(''));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "from", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^      const move = { from, to, piece, captured };$/", "language": "JavaScript", "kind": "field", "scope": "gameReducer.move", "scopeKind": "class"}, {"_type": "tag", "name": "gameInitialState", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^export const gameInitialState = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "gameReducer", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^export function gameReducer(state = gameInitialState, action) {$/", "language": "JavaScript", "kind": "function", "signature": "(state = gameInitialState, action)"}, {"_type": "tag", "name": "getHints", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^export function getHints(board, r, c) {$/", "language": "JavaScript", "kind": "function", "signature": "(board, r, c)"}, {"_type": "tag", "name": "inBounds", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^function inBounds(r,c){ return r>=0 && r<8 && c>=0 && c<8; }$/", "language": "JavaScript", "kind": "function", "signature": "(r,c)"}, {"_type": "tag", "name": "initialBoard", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^const initialBoard = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isBlack", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^function isBlack(piece) { return piece && piece === piece.toLowerCase(); }$/", "language": "JavaScript", "kind": "function", "signature": "(piece)"}, {"_type": "tag", "name": "isWhite", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^function isWhite(piece) { return piece && piece === piece.toUpperCase(); }$/", "language": "JavaScript", "kind": "function", "signature": "(piece)"}, {"_type": "tag", "name": "moves", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  moves: [], \\/\\/ history stack [{ from:{r,c}, to:{r,c}, piece, captured }]$/", "language": "JavaScript", "kind": "property", "scope": "gameInitialState", "scopeKind": "class"}, {"_type": "tag", "name": "selected", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  selected: null, \\/\\/ { r, c } or null$/", "language": "JavaScript", "kind": "property", "scope": "gameInitialState", "scopeKind": "class"}, {"_type": "tag", "name": "setup", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  const setup = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "turn", "path": "/home/kavia/workspace/code-generation/chess-mastery-academy-30741-30750/frontend_app/src/state/slices/gameSlice.js", "pattern": "/^  turn: 'w', \\/\\/ 'w' | 'b'$/", "language": "JavaScript", "kind": "property", "scope": "gameInitialState", "scopeKind": "class"}], "hash": "c60e402d9adbecde892e40846d68f420", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/src/state/slices/gameSlice.js", "fields": [{"name": "board: initialBoard(),", "scope": "gameInitialState", "scopeKind": "class", "description": "unavailable"}, {"name": "const move = { from, to, piece, captured };", "scope": "gameReducer.move", "scopeKind": "class", "description": "unavailable"}, {"name": "moves: [], \\/\\/ history stack [{ from:{r,c}, to:{r,c}, piece, captured }]", "scope": "gameInitialState", "scopeKind": "class", "description": "unavailable"}, {"name": "selected: null, \\/\\/ { r, c } or null", "scope": "gameInitialState", "scopeKind": "class", "description": "unavailable"}, {"name": "turn: 'w', \\/\\/ 'w' | 'b'", "scope": "gameInitialState", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"43": ""}]}